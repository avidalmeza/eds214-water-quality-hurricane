---
title: "paper"
format: html
---

## Background


## Data 
Start loading in libraries and load in data from EDI website provided in the README.md file. While loading in CSV files add clean_names to make all columns lowercase.
```{r}
rm(list=ls())
# Loading in packages that may be used
library(tidyverse)
library(dplyr)
library(janitor)
library(here)
library(zoo)
library(patchwork)

source(here("R","Rolling_average.R"))


# Reading in CSV files and assigning into dataframes
brisley_one <- read_csv(here('data','QuebradaCuenca1-Bisley.csv')) %>% 
  clean_names()

brisley_two <- read_csv(here('data', 'QuebradaCuenca2-Bisley.csv')) %>% 
  clean_names()

brisley_three <- read_csv(here('data', 'QuebradaCuenca3-Bisley.csv')) %>% 
  clean_names()

prm <- read_csv(here('data','RioMameyesPuenteRoto.csv')) %>% 
  clean_names() 
```


## Methods
For methods the approach taken was to combine all four dataframes into one to and start arrange, filtering, and selecting. As well as use a function created for all concentrations. 
```{r}
#use rbind instead of full join. This will allow each row to be treated individually instead of a key
# Joining all csv's into one dataframe
all_brisley <- rbind(brisley_one, brisley_two, brisley_three, prm)

# create a clean dataframe by filtering, mutating and group by     
all_brisley1 <- all_brisley %>% 

  #Using mutate create a column called year, to have only the year
  mutate(year = lubridate::year(sample_date)) %>% 
  
  #Using filter, grab the dates interested in before and after events
  filter(year >= 1988 & year <= 1994) %>% 
  
  # Arrange by sample_date to have them in order
  arrange(sample_date) %>% 
  
  # Remove these columns from the original dataframe
  select(-don:-don_code)
  
    

# Check to see if this will work for Ca rolling column being created. 
all_brisley1$ca_rolling <- sapply( 
    all_brisley1$sample_date,
    moving_average,
    dates = all_brisley1$sample_date,
    conc = all_brisley1$ca,
    win_size_wks = 9)

# Attempt at creating for the rest of the concentrations
# #no3_n
# all_brisley$no3_rolling <- sapply( 
#   all_brisley$sample_date,
#   moving_average,
#   dates = all_brisley$sample_date,
#   conc = all_brisley$no3_n,
#   win_size_wks = 9)
# 
# 
# # k
# all_brisley$k_rolling <- sapply(  
#   all_brisley$sample_date,
#   moving_average,
#   dates = all_brisley$sample_date,
#   conc = all_brisley$k,
#   win_size_wks = 9)
# 
# 
# # mg
# all_brisley$mg_rolling <- sapply( 
#   all_brisley$sample_date,
#   moving_average,
#   dates = all_brisley$sample_date,
#   conc = all_brisley$mg,
#   win_size_wks = 9)
# 
# 
# # nh4
# all_brisley$nh4_n_rolling <- sapply( 
#   all_brisley$sample_date,
#   moving_average,
#   dates = all_brisley$sample_date,
#   conc = all_brisley$nh4_n,
#   win_size_wks = 9)


```


# Results
When calculating the results for the concentrations interested, a plot was created for each concentration and then combined into one plot. The results will print out on the plot pane.
```{r}
# Creating plots to see if dataframe works and how it looks

# Plot for NH4
p1 <- ggplot(data= all_brisley, aes(x= sample_date, y=nh4_avg )) + # nh4
  
  # plot as line
  geom_line(aes(linetype=sample_id))+
  
  # Add a vertical line to plot
  geom_vline(xintercept = as.Date("1989-09-22"), linetype = "dashed", color = "red")+
  
  # Removing x-axis and removing legend
  theme(axis.text.x = element_blank(), legend.position = "none")


# Replicate the steps above for the rest of the interested concentrations.
p2 <- ggplot(data= all_brisley, aes(x= sample_date, y= ca_avg)) + # ca
  geom_line(aes(color=sample_id))+
  geom_vline(xintercept = as.Date("1989-09-22"), linetype = "dashed", color = "red")+
  labs(x = " ",
       legend= " ")+
  theme(axis.text.x = element_blank(), legend.position = c())
# 
# p3 <- ggplot(data= all_brisley, aes(x= sample_date, y= mg_avg)) + # mg
#   geom_line(aes(color=sample_id)) +
#   geom_vline(xintercept = as.Date("1989-09-22"), linetype = "dashed", color = "red")+
#   labs(x = " ",
#        legend= " ")+
#   theme(axis.text.x = element_blank(), legend.position = "none")
# 
# 
# p4 <- ggplot(data= all_brisley, aes(x= sample_date, y=no3_avg ))+ # no3
#   geom_line(aes(color=sample_id))+
#   geom_vline(xintercept = as.Date("1989-09-22"), linetype = "dashed", color = "red")+
#   labs(x = " ",
#        legend= " ")+ 
#   theme(axis.text.x = element_blank(), legend.position = "none")
# 
# 
# p5 <- ggplot(data= all_brisley, aes(x= sample_date, y= k_avg)) + # k
#   geom_line(aes(color=sample_id))+
#   geom_vline(xintercept = as.Date("1989-09-22"), linetype = "dashed", color = "red")+
#   labs(x = " ",
#        legend= " ")+
#   theme(legend.justification.inside = "top,right")


# Combine plots made and check to see if output looks correct.
# combine_plots<- (p5/ p4/ p3/ p2/ p1)
# 
# 
# # Printing plots to see on pane
# print(combine_plots)
```

With the results we can see that all concentrations fluctuated within a decade after the Hurricane Hugo
